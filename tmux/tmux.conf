# Prefer C-a binding over C-b.
set -g prefix C-a

# Allow use of native C-a via C-a a.
bind-key a send-prefix

# Fix "returned 127" error
# https://github.com/tmux-plugins/tpm/blob/master/docs/tpm_not_working.md
if-shell '[ $(uname -p) == 'arm' ]' \
	'set-environment -g PATH "/opt/homebrew/bin:/usr/local/bin:/bin:/usr/bin"' \
	'set-environment -g PATH "/usr/local/bin:/bin:/bin:/usr/bin"'

# Set default-shell from environment
set -g default-shell $SHELL
set -g default-terminal "xterm-256color"

# Pass through window titles to terminal.
set -g set-titles on
set -g set-titles-string '#W'

# Start numbering at 1 and automatically name.
set -g allow-rename off
set -g base-index 1
set -g renumber-windows on
setw -g automatic-rename on

# Enable mouse support.
set -g mouse on

# Enable vi mode.
set-window-option -g mode-keys vi

# Smart pane switching with awareness of Vim splits.
# From https://github.com/aserowy/tmux.nvim#navigation
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# Moving windows
bind-key -n 'C-S-Left' swap-window -t -1
bind-key -n 'C-S-Right' swap-window -t +1

# Smart pane killing
bind-key d run-shell "~/.config/tmux/sh/smart-kill-pane"

# Split panes with v and h
bind-key v split-window -h
bind-key s split-window -v

# Use C-a o to display panes
bind-key o display-panes

# Use C-a z to suspend
bind-key z detach

# Use C-a ´ to switch to last active window.
bind-key ´ last-window

# Use fzf to switch sessions
bind-key C-j display-popup -E "\
    tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
    sed '/^$/d' |\
    fzf --reverse --header jump-to-session --preview 'tmux capture-pane -pt {}'  |\
    xargs tmux switch-client -t"

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'dracula/tmux'

set -g @dracula-plugins "time"
set -g @dracula-day-month true
set -g @dracula-show-left-icon session
set -g @dracula-border-contrast true

if-shell '[ $(uname) == 'Linux' ]' {
    set -g @override_copy_command 'xsel -i --clipboard'
    set -g @yank_selection 'clipboard'
    set -g @yank_selection_mouse 'clipboard'
}

# Install `tpm` if needed.
if "test ! -d ~/.config/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"

run '~/.config/tmux/plugins/tpm/tpm'
